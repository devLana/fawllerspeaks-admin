import { type IOptions } from "sanitize-html";

export const sanitizeOptions: IOptions = {
  allowedTags: [
    "a",
    "blockquote",
    "br",
    "col",
    "colgroup",
    "figcaption",
    "figure",
    "h2",
    "h3",
    "h4",
    "h5",
    "hr",
    "i",
    "img",
    "input",
    "label",
    "li",
    "ol",
    "p",
    "s",
    "span",
    "strong",
    "sub",
    "sup",
    "table",
    "tbody",
    "td",
    "th",
    "thead",
    "tr",
    "u",
    "ul",
  ],
  allowedAttributes: {
    a: ["href", "rel", "target"],
    col: ["style"],
    figure: ["class", "style"],
    h2: ["style"],
    h3: ["style"],
    h4: ["style"],
    h5: ["style"],
    img: ["alt", "class", "height", "src", "style", "width"],
    input: [
      { name: "checked", values: [] },
      { name: "disabled", values: [] },
      { name: "type", values: ["checkbox"] },
    ],
    label: ["class"],
    ol: ["style"],
    p: ["style"],
    span: ["class", "style"],
    table: ["class", "style"],
    td: ["colspan", "rowspan", "style"],
    th: ["colspan", "rowspan", "style"],
    ul: ["class", "style"],
  },
  allowedSchemes: ["http", "https", "mailto", "tel"],
  exclusiveFilter({ mediaChildren, tag, text }) {
    return (
      !new Set(["br", "hr", "img", "input", "td"]).has(tag) &&
      mediaChildren.length === 0 &&
      !text.trim()
    );
  },
  nonBooleanAttributes: ["class", "href", "id", "rel", "style", "target"],
  parser: { lowerCaseTags: false, lowerCaseAttributeNames: false },
  selfClosing: ["br", "hr", "img", "input"],
};
